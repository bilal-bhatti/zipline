{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Example OpenAPI Version 2 Specification",
    "title": "Example OpenAPI Version 2 Specification",
    "version": "1.0.0"
  },
  "host": "api.example.com",
  "basePath": "/api",
  "paths": {
    "/contacts": {
      "get": {
        "description": "GetBunch by ids",
        "tags": [
          "services"
        ],
        "summary": "GetBunch by ids",
        "operationId": "ContactsServiceGetBunch",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "contact ids",
            "name": "ids",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200 success response",
            "schema": {
              "$ref": "#/definitions/services.ContactResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Create a new contact request entity.",
        "tags": [
          "services"
        ],
        "summary": "Create a new contact request entity.",
        "operationId": "ContactsServiceCreate",
        "parameters": [
          {
            "description": "ContactRequest model",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/services.ContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 success response",
            "schema": {
              "$ref": "#/definitions/services.ContactResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "DeleteBulk contact by id",
        "tags": [
          "services"
        ],
        "summary": "DeleteBulk contact by id",
        "operationId": "ContactsServiceDeleteBulk",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "ids",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "description": "GetOne contact by id",
        "tags": [
          "services"
        ],
        "summary": "GetOne contact by id",
        "operationId": "ContactsServiceGetOne",
        "parameters": [
          {
            "type": "integer",
            "description": "contact id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200 success response",
            "schema": {
              "$ref": "#/definitions/services.ContactResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "description": "Replace a contact entity completely.",
        "tags": [
          "services"
        ],
        "summary": "Replace a contact entity completely.",
        "operationId": "ContactsServiceReplace",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "ContactRequest model",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/services.ContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 success response",
            "schema": {
              "$ref": "#/definitions/services.ContactResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Update a contact entity with provided data.",
        "tags": [
          "services"
        ],
        "summary": "Update a contact entity with provided data.",
        "operationId": "ContactsServiceUpdate",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "ContactRequest model",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/services.ContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 success response",
            "schema": {
              "$ref": "#/definitions/services.ContactResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/contacts/{month}-{day}-{year}": {
      "get": {
        "description": "Get contacts list by date",
        "tags": [
          "services"
        ],
        "summary": "Get contacts list by date",
        "operationId": "ContactsServiceGetByDate",
        "parameters": [
          {
            "type": "string",
            "name": "month",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "day",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "year",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200 success response",
            "schema": {
              "$ref": "#/definitions/services.ContactResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/doodads": {
      "post": {
        "description": "Create a new doodad entity.",
        "tags": [
          "services"
        ],
        "summary": "Create a new doodad entity.",
        "operationId": "DoodadsServiceCreate",
        "parameters": [
          {
            "description": "ThingRequest model",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.ThingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 success response",
            "schema": {
              "$ref": "#/definitions/models.ThingResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/echo/{input}": {
      "get": {
        "description": "Echo returns body with 'i's replaced with 'o's",
        "tags": [
          "web"
        ],
        "summary": "Echo returns body with 'i's replaced with 'o's",
        "operationId": "Echo",
        "parameters": [
          {
            "type": "string",
            "name": "input",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200 success response",
            "schema": {
              "$ref": "#/definitions/EchoResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ping": {
      "post": {
        "description": "Ping returns body with 'i's replaced with 'o's",
        "tags": [
          "services"
        ],
        "summary": "Ping returns body with 'i's replaced with 'o's",
        "operationId": "Ping",
        "parameters": [
          {
            "description": "PingRequest model",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/services.PingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 success response",
            "schema": {
              "$ref": "#/definitions/services.PingResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/things": {
      "get": {
        "description": "Get things by date range",
        "tags": [
          "web"
        ],
        "summary": "Get things by date range",
        "operationId": "ThingsServiceGetByDateRange",
        "parameters": [
          {
            "type": "string",
            "format": "date-time,2006-01-02",
            "description": "`format:\"date-time,2006-01-02\"` date should be in Go time format",
            "name": "from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time,2006-01-02",
            "description": "`format:\"date-time,2006-01-02\"` date should be in Go time format",
            "name": "to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "200 success response",
            "schema": {
              "$ref": "#/definitions/ThingListResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Create thing",
        "tags": [
          "web"
        ],
        "summary": "Create thing",
        "operationId": "ThingsServiceCreate",
        "parameters": [
          {
            "description": "ThingRequest model",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.ThingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 success response",
            "schema": {
              "$ref": "#/definitions/models.ThingResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/things/{category}": {
      "get": {
        "description": "Get things by category and search query",
        "tags": [
          "web"
        ],
        "summary": "Get things by category and search query",
        "operationId": "ThingsServiceGetByCategoryAndQuery",
        "parameters": [
          {
            "type": "string",
            "description": "category of data to search",
            "name": "category",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "search query",
            "name": "q",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200 success response",
            "schema": {
              "$ref": "#/definitions/ThingListResponse"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/things/{id}": {
      "delete": {
        "description": "Delete thing by id",
        "tags": [
          "web"
        ],
        "summary": "Delete thing by id",
        "operationId": "ThingsServiceDelete",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "EchoResponse": {
      "description": "EchoResponse model",
      "type": "object",
      "properties": {
        "output": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Error": {
      "description": "error response object",
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "status": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ThingListResponse": {
      "description": "List of things",
      "type": "object",
      "properties": {
        "things": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "bool": {
                "type": "boolean"
              },
              "createDate": {
                "type": "string",
                "format": "date-time,2006-01-02"
              },
              "float32": {
                "type": "number",
                "format": "float"
              },
              "float64": {
                "type": "number",
                "format": "double"
              },
              "int": {
                "type": "integer"
              },
              "int16": {
                "type": "integer",
                "format": "int16"
              },
              "int32": {
                "type": "integer",
                "format": "int32"
              },
              "int64": {
                "type": "integer",
                "format": "int64"
              },
              "int8": {
                "type": "integer",
                "format": "int8"
              },
              "name": {
                "type": "string"
              },
              "uint": {
                "type": "integer"
              },
              "uint16": {
                "type": "integer",
                "format": "int16"
              },
              "uint32": {
                "type": "integer",
                "format": "int32"
              },
              "uint64": {
                "type": "integer",
                "format": "int64"
              },
              "uint8": {
                "type": "integer",
                "format": "int8"
              },
              "updateDate": {
                "type": "string",
                "format": "date-time"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "models.ThingRequest": {
      "description": "ThingRequest model",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "models.ThingResponse": {
      "description": "ThingResponse model",
      "type": "object",
      "properties": {
        "bool": {
          "type": "boolean"
        },
        "createDate": {
          "type": "string",
          "format": "date-time,2006-01-02"
        },
        "float32": {
          "type": "number",
          "format": "float"
        },
        "float64": {
          "type": "number",
          "format": "double"
        },
        "int": {
          "type": "integer"
        },
        "int16": {
          "type": "integer",
          "format": "int16"
        },
        "int32": {
          "type": "integer",
          "format": "int32"
        },
        "int64": {
          "type": "integer",
          "format": "int64"
        },
        "int8": {
          "type": "integer",
          "format": "int8"
        },
        "name": {
          "type": "string"
        },
        "uint": {
          "type": "integer"
        },
        "uint16": {
          "type": "integer",
          "format": "int16"
        },
        "uint32": {
          "type": "integer",
          "format": "int32"
        },
        "uint64": {
          "type": "integer",
          "format": "int64"
        },
        "uint8": {
          "type": "integer",
          "format": "int8"
        },
        "updateDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false
    },
    "services.ContactRequest": {
      "description": "ContactRequest model",
      "type": "object",
      "properties": {
        "address": {
          "type": "object",
          "properties": {
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "street": {
              "type": "string"
            },
            "zipCode": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "eMail": {
          "type": "string",
          "format": "email"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "services.ContactResponse": {
      "description": "ContactResponse model",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "services.PingRequest": {
      "description": "PingRequest model",
      "type": "object",
      "properties": {
        "input": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "services.PingResponse": {
      "description": "PingResponse model",
      "type": "object",
      "properties": {
        "output": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "securityDefinitions": {
    "token": {
      "description": "Requests should pass a token.",
      "type": "token",
      "name": "X-TOKEN",
      "in": "header"
    }
  },
  "security": [
    {
      "token": []
    }
  ]
}
